.demo1 {
    input {
        width: 33%;
    }
}

.demo2 {
    .button-group{
        float: right;
        button:first-child{
            margin-right: 15px;
        }
    }
    p{
        border: 1px solid black;
        padding: 5px;
        display: flex;
        span{
            flex: 1;
            text-align: center;
        }
    }
    div{
        color: red;
        font-weight: bold;
    }
    //当值被修改时
    .ng-dirty:not(form) {
        border-left: 5px solid #a94442;
    } 
    //当控件值合法时
    .ng-valid:not(form) {
        border-left: 5px solid #42A948;
    } 
    //当控件值为无效值且修改过
    .ng-invalid:not(form).ng-touched:not(form) {
        border-left: 5px solid #a94442;
    }
    /* 
    这里可能有人会好奇为什么被修改就直接是红色,这是因为如果不写这句话存在如下bug.
    因为需求是"在初始状态下一切正常",所以,不能单纯判断值是否有效,要配合touched进行判断,否则一开始就是红色.
    当用户第一次选中输入框时,输入值再撤销,其实控件touched状态是没有发生变更的,只有在失焦事件发生后才会变更.
    也就导致了在touched状态变更前,即使数据不合法,也不会产生红色边框.
    所以补了一个dirty状态,一旦值被动过,就直接给他加红色边框.
    */
}
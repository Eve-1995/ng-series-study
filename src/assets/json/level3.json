[
    {
        "question": "父组件:<child><span>你只是一个过客</span><span class='className'>从我的世界路过</span></child>子组件:<ng-content select='.className'></ng-content> 请问子组件显示的内容是()",
        "optionA": "你只是一个过客",
        "optionB": "从我的世界路过",
        "optionC": "你只是一个过客从我的世界路过",
        "optionD": "什么都不显示",
        "answer": "B"
    },
    {
        "question": "以下关于ng-template和ng-container的说法不正确的是()",
        "optionA": "<ng-template>something</ng-template>,会被解析为something",
        "optionB": "<ng-container>something</ng-container>,会被解析为something",
        "optionC": "<ng-template [ngIf]=”true”>something</ng-template>,会被解析为something",
        "optionD": "以上说法均正确",
        "answer": "A"
    },
    {
        "question": "以下关于Angular生命周期钩子执行顺序的排列正确的是()",
        "optionA": "ngOnChanges -> ngOnInit -> ngAfterContentInit -> ngAfterViewInit -> ngOnDestory",
        "optionB": "ngOnchanges -> ngOnInit -> ngAfterViewInit -> ngAfterContentInit -> ngOnDestory",
        "optionC": "ngOnInit -> ngOnChanges -> ngAfterViewInit -> ngAfterContentInit -> ngOnDestory",
        "optionD": "ngOnInit -> ngOnChanges -> ngAfterContentInit -> ngAfterViewInit -> ngOnDestory",
        "answer": "A"
    },
    {
        "question": "下面关于ngAfterViewInit钩子描述正确的是()",
        "optionA": "在 Angular 第一次显示数据绑定和设置指令/组件的输入属性之后，初始化指令/组件",
        "optionB": "当把内容投影进组件之后调用",
        "optionC": "初始化完组件视图及其子视图之后调用",
        "optionD": "每次做完组件视图和子视图的变更检测之后调用",
        "answer": "C"
    },
    {
        "question": "以下关于FormGroup的说法中,不正确的一项是()",
        "optionA": "可以通过this.form.get('name').disabled()来禁用表单控件",
        "optionB": "可以通过this.form.get('name').setValue('value')来设置表单控件值",
        "optionC": "FormGroup不允许嵌套",
        "optionD": "patchValue()可以批量修改值",
        "answer": "C"
    }
]